<style>@font-face {
  font-family: octicons-anchor;
  src: url(https://cdnjs.cloudflare.com/ajax/libs/octicons/4.4.0/font/octicons.woff) format('woff');
}

* {
    box-sizing: border-box;
}

body {
    width: 980px;
    margin-right: auto;
    margin-left: auto;
    color:#333;
    background:#fff;
}

body .markdown-body {
    padding: 45px;
    border: 1px solid #ddd;
    border-radius: 3px;
    word-wrap: break-word;
}

pre {
    font: 12px Consolas, "Liberation Mono", Menlo, Courier, monospace;
}

.markdown-body {
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  color: #333;
  font-family: "Helvetica Neue", Helvetica, "Segoe UI", Arial, freesans, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 16px;
  line-height: 1.6;
  word-wrap: break-word;
}

.markdown-body a {
  background-color: transparent;
}

.markdown-body a:active,
.markdown-body a:hover {
  outline: 0;
}

.markdown-body strong {
  font-weight: bold;
}

.markdown-body h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

.markdown-body img {
  border: 0;
}

.markdown-body hr {
  box-sizing: content-box;
  height: 0;
}

.markdown-body pre {
  overflow: auto;
}

.markdown-body code,
.markdown-body kbd,
.markdown-body pre {
  font-family: monospace, monospace;
  font-size: 1em;
}

.markdown-body input {
  color: inherit;
  font: inherit;
  margin: 0;
}

.markdown-body html input[disabled] {
  cursor: default;
}

.markdown-body input {
  line-height: normal;
}

.markdown-body input[type="checkbox"] {
  box-sizing: border-box;
  padding: 0;
}

.markdown-body table {
  border-collapse: collapse;
  border-spacing: 0;
}

.markdown-body td,
.markdown-body th {
  padding: 0;
}

.markdown-body input {
  font: 13px / 1.4 Helvetica, arial, nimbussansl, liberationsans, freesans, clean, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

.markdown-body a {
  color: #4078c0;
  text-decoration: none;
}

.markdown-body a:hover,
.markdown-body a:active {
  text-decoration: underline;
}

.markdown-body hr {
  height: 0;
  margin: 15px 0;
  overflow: hidden;
  background: transparent;
  border: 0;
  border-bottom: 1px solid #ddd;
}

.markdown-body hr:before {
  display: table;
  content: "";
}

.markdown-body hr:after {
  display: table;
  clear: both;
  content: "";
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 15px;
  margin-bottom: 15px;
  line-height: 1.1;
}

.markdown-body h1 {
  font-size: 30px;
}

.markdown-body h2 {
  font-size: 21px;
}

.markdown-body h3 {
  font-size: 16px;
}

.markdown-body h4 {
  font-size: 14px;
}

.markdown-body h5 {
  font-size: 12px;
}

.markdown-body h6 {
  font-size: 11px;
}

.markdown-body blockquote {
  margin: 0;
}

.markdown-body ul,
.markdown-body ol {
  padding: 0;
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body ol ol,
.markdown-body ul ol {
  list-style-type: lower-roman;
}

.markdown-body ul ul ol,
.markdown-body ul ol ol,
.markdown-body ol ul ol,
.markdown-body ol ol ol {
  list-style-type: lower-alpha;
}

.markdown-body dd {
  margin-left: 0;
}

.markdown-body code {
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  font-size: 12px;
}

.markdown-body pre {
  margin-top: 0;
  margin-bottom: 0;
  font: 12px Consolas, "Liberation Mono", Menlo, Courier, monospace;
}

.markdown-body .select::-ms-expand {
  opacity: 0;
}

.markdown-body .octicon {
  font: normal normal normal 16px/1 octicons-anchor;
  display: inline-block;
  text-decoration: none;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.markdown-body .octicon-link:before {
  content: '\f05c';
}

.markdown-body:before {
  display: table;
  content: "";
}

.markdown-body:after {
  display: table;
  clear: both;
  content: "";
}

.markdown-body>*:first-child {
  margin-top: 0 !important;
}

.markdown-body>*:last-child {
  margin-bottom: 0 !important;
}

.markdown-body a:not([href]) {
  color: inherit;
  text-decoration: none;
}

.markdown-body .anchor {
  display: inline-block;
  padding-right: 2px;
  margin-left: -18px;
}

.markdown-body .anchor:focus {
  outline: none;
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 1em;
  margin-bottom: 16px;
  font-weight: bold;
  line-height: 1.4;
}

.markdown-body h1 .octicon-link,
.markdown-body h2 .octicon-link,
.markdown-body h3 .octicon-link,
.markdown-body h4 .octicon-link,
.markdown-body h5 .octicon-link,
.markdown-body h6 .octicon-link {
  color: #000;
  vertical-align: middle;
  visibility: hidden;
}

.markdown-body h1:hover .anchor,
.markdown-body h2:hover .anchor,
.markdown-body h3:hover .anchor,
.markdown-body h4:hover .anchor,
.markdown-body h5:hover .anchor,
.markdown-body h6:hover .anchor {
  text-decoration: none;
}

.markdown-body h1:hover .anchor .octicon-link,
.markdown-body h2:hover .anchor .octicon-link,
.markdown-body h3:hover .anchor .octicon-link,
.markdown-body h4:hover .anchor .octicon-link,
.markdown-body h5:hover .anchor .octicon-link,
.markdown-body h6:hover .anchor .octicon-link {
  visibility: visible;
}

.markdown-body h1 {
  padding-bottom: 0.3em;
  font-size: 2.25em;
  line-height: 1.2;
  border-bottom: 1px solid #eee;
}

.markdown-body h1 .anchor {
  line-height: 1;
}

.markdown-body h2 {
  padding-bottom: 0.3em;
  font-size: 1.75em;
  line-height: 1.225;
  border-bottom: 1px solid #eee;
}

.markdown-body h2 .anchor {
  line-height: 1;
}

.markdown-body h3 {
  font-size: 1.5em;
  line-height: 1.43;
}

.markdown-body h3 .anchor {
  line-height: 1.2;
}

.markdown-body h4 {
  font-size: 1.25em;
}

.markdown-body h4 .anchor {
  line-height: 1.2;
}

.markdown-body h5 {
  font-size: 1em;
}

.markdown-body h5 .anchor {
  line-height: 1.1;
}

.markdown-body h6 {
  font-size: 1em;
  color: #777;
}

.markdown-body h6 .anchor {
  line-height: 1.1;
}

.markdown-body p,
.markdown-body blockquote,
.markdown-body ul,
.markdown-body ol,
.markdown-body dl,
.markdown-body table,
.markdown-body pre {
  margin-top: 0;
  margin-bottom: 16px;
}

.markdown-body hr {
  height: 4px;
  padding: 0;
  margin: 16px 0;
  background-color: #e7e7e7;
  border: 0 none;
}

.markdown-body ul,
.markdown-body ol {
  padding-left: 2em;
}

.markdown-body ul ul,
.markdown-body ul ol,
.markdown-body ol ol,
.markdown-body ol ul {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown-body li>p {
  margin-top: 16px;
}

.markdown-body dl {
  padding: 0;
}

.markdown-body dl dt {
  padding: 0;
  margin-top: 16px;
  font-size: 1em;
  font-style: italic;
  font-weight: bold;
}

.markdown-body dl dd {
  padding: 0 16px;
  margin-bottom: 16px;
}

.markdown-body blockquote {
  padding: 0 15px;
  color: #777;
  border-left: 4px solid #ddd;
}

.markdown-body blockquote>:first-child {
  margin-top: 0;
}

.markdown-body blockquote>:last-child {
  margin-bottom: 0;
}

.markdown-body table {
  display: block;
  width: 100%;
  overflow: auto;
  word-break: normal;
  word-break: keep-all;
}

.markdown-body table th {
  font-weight: bold;
}

.markdown-body table th,
.markdown-body table td {
  padding: 6px 13px;
  border: 1px solid #ddd;
}

.markdown-body table tr {
  background-color: #fff;
  border-top: 1px solid #ccc;
}

.markdown-body table tr:nth-child(2n) {
  background-color: #f8f8f8;
}

.markdown-body img {
  max-width: 100%;
  box-sizing: content-box;
  background-color: #fff;
}

.markdown-body code {
  padding: 0;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
  margin: 0;
  font-size: 85%;
  background-color: rgba(0,0,0,0.04);
  border-radius: 3px;
}

.markdown-body code:before,
.markdown-body code:after {
  letter-spacing: -0.2em;
  content: "\00a0";
}

.markdown-body pre>code {
  padding: 0;
  margin: 0;
  font-size: 100%;
  word-break: normal;
  white-space: pre;
  background: transparent;
  border: 0;
}

.markdown-body .highlight {
  margin-bottom: 16px;
}

.markdown-body .highlight pre,
.markdown-body pre {
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: #f7f7f7;
  border-radius: 3px;
}

.markdown-body .highlight pre {
  margin-bottom: 0;
  word-break: normal;
}

.markdown-body pre {
  word-wrap: normal;
}

.markdown-body pre code {
  display: inline;
  max-width: initial;
  padding: 0;
  margin: 0;
  overflow: initial;
  line-height: inherit;
  word-wrap: normal;
  background-color: transparent;
  border: 0;
}

.markdown-body pre code:before,
.markdown-body pre code:after {
  content: normal;
}

.markdown-body kbd {
  display: inline-block;
  padding: 3px 5px;
  font-size: 11px;
  line-height: 10px;
  color: #555;
  vertical-align: middle;
  background-color: #fcfcfc;
  border: solid 1px #ccc;
  border-bottom-color: #bbb;
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 #bbb;
}

.markdown-body .pl-c {
  color: #969896;
}

.markdown-body .pl-c1,
.markdown-body .pl-s .pl-v {
  color: #0086b3;
}

.markdown-body .pl-e,
.markdown-body .pl-en {
  color: #795da3;
}

.markdown-body .pl-s .pl-s1,
.markdown-body .pl-smi {
  color: #333;
}

.markdown-body .pl-ent {
  color: #63a35c;
}

.markdown-body .pl-k {
  color: #a71d5d;
}

.markdown-body .pl-pds,
.markdown-body .pl-s,
.markdown-body .pl-s .pl-pse .pl-s1,
.markdown-body .pl-sr,
.markdown-body .pl-sr .pl-cce,
.markdown-body .pl-sr .pl-sra,
.markdown-body .pl-sr .pl-sre {
  color: #183691;
}

.markdown-body .pl-v {
  color: #ed6a43;
}

.markdown-body .pl-id {
  color: #b52a1d;
}

.markdown-body .pl-ii {
  background-color: #b52a1d;
  color: #f8f8f8;
}

.markdown-body .pl-sr .pl-cce {
  color: #63a35c;
  font-weight: bold;
}

.markdown-body .pl-ml {
  color: #693a17;
}

.markdown-body .pl-mh,
.markdown-body .pl-mh .pl-en,
.markdown-body .pl-ms {
  color: #1d3e81;
  font-weight: bold;
}

.markdown-body .pl-mq {
  color: #008080;
}

.markdown-body .pl-mi {
  color: #333;
  font-style: italic;
}

.markdown-body .pl-mb {
  color: #333;
  font-weight: bold;
}

.markdown-body .pl-md {
  background-color: #ffecec;
  color: #bd2c00;
}

.markdown-body .pl-mi1 {
  background-color: #eaffea;
  color: #55a532;
}

.markdown-body .pl-mdr {
  color: #795da3;
  font-weight: bold;
}

.markdown-body .pl-mo {
  color: #1d3e81;
}

.markdown-body kbd {
  display: inline-block;
  padding: 3px 5px;
  font: 11px Consolas, "Liberation Mono", Menlo, Courier, monospace;
  line-height: 10px;
  color: #555;
  vertical-align: middle;
  background-color: #fcfcfc;
  border: solid 1px #ccc;
  border-bottom-color: #bbb;
  border-radius: 3px;
  box-shadow: inset 0 -1px 0 #bbb;
}

.markdown-body .plan-price-unit {
  color: #767676;
  font-weight: normal;
}

.markdown-body .task-list-item {
  list-style-type: none;
}

.markdown-body .task-list-item+.task-list-item {
  margin-top: 3px;
}

.markdown-body .task-list-item input {
  margin: 0 0.35em 0.25em -1.6em;
  vertical-align: middle;
}

.markdown-body .plan-choice {
  padding: 15px;
  padding-left: 40px;
  display: block;
  border: 1px solid #e0e0e0;
  position: relative;
  font-weight: normal;
  background-color: #fafafa;
}

.markdown-body .plan-choice.open {
  background-color: #fff;
}

.markdown-body .plan-choice.open .plan-choice-seat-breakdown {
  display: block;
}

.markdown-body .plan-choice-free {
  border-radius: 3px 3px 0 0;
}

.markdown-body .plan-choice-paid {
  border-radius: 0 0 3px 3px;
  border-top: 0;
  margin-bottom: 20px;
}

.markdown-body .plan-choice-radio {
  position: absolute;
  left: 15px;
  top: 18px;
}

.markdown-body .plan-choice-exp {
  color: #999;
  font-size: 12px;
  margin-top: 5px;
}

.markdown-body .plan-choice-seat-breakdown {
  margin-top: 10px;
  display: none;
}

.markdown-body :checked+.radio-label {
  z-index: 1;
  position: relative;
  border-color: #4078c0;
}

@media print {
  body .markdown-body {
    padding: 0;
    border: none;
  }
}
</style>
<article class="markdown-body"><h1>
<a id="user-content-руководство-кпроекту" class="anchor" href="#%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE-%D0%BA%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%83" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Руководство к проекту</h1>
<h2>
<a id="user-content-базовая-концепция" class="anchor" href="#%D0%B1%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D1%8F-%D0%BA%D0%BE%D0%BD%D1%86%D0%B5%D0%BF%D1%86%D0%B8%D1%8F" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Базовая концепция</h2>
<p>Это шаблон проекта, в первую очередь предназначенный для верстки, но в тоже время легко адаптируется если необходимо сделать SPA приложение.</p>
<p>Проект собирается с помощью <strong>Gulp 4</strong>, скрипты компилируются с помощью <strong><a href="https://github.com/evanw/esbuild">ES Build</a></strong>, для стилей используется <strong>Stylus</strong>. Гибкая конфигурация позволяет легко настраивать проект под любые нужды.</p>
<h1>
<a id="user-content-начало-работы" class="anchor" href="#%D0%BD%D0%B0%D1%87%D0%B0%D0%BB%D0%BE-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Начало работы</h1>
<h2>
<a id="user-content-устанавливаем-зависимости" class="anchor" href="#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%B0%D0%B2%D0%BB%D0%B8%D0%B2%D0%B0%D0%B5%D0%BC-%D0%B7%D0%B0%D0%B2%D0%B8%D1%81%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D0%B8" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Устанавливаем зависимости</h2>
<p><code>npm i</code></p>
<h3>
<a id="user-content-команды-для-запуска" class="anchor" href="#%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA%D0%B0" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Команды для запуска</h3>
<p><code>npm run start</code> — запуск проекта с сервером в режиме наблюдения за изменениями файлов и открытием окна браузера</p>
<p><code>npm run dev</code> — то же, что и <code>start</code> только без открытия окна браузера</p>
<p><code>npm run build</code> — компиляция проекта в папку <strong>build</strong> в продакшен режиме (отлкючение Sourcemaps, сжатие стилей, сжатие скриптов и тд)</p>
<h3>
<a id="user-content-js-библиотеки" class="anchor" href="#js-%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D1%82%D0%B5%D0%BA%D0%B8" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>JS Библиотеки</h3>
<p>Зависимости из файла <strong>package.json</strong> —<code>dependencies</code> копируются в папку <strong>build/js/vendor</strong>. Соответственно после установки, например <code>npm i jquery</code>, в папке <strong>build/js/vendor</strong> появится папка <strong>jquery</strong>, к которой необходимо обращаться при подключении в html.</p>
<p>Пример подключения библиотек есть в файле <strong>custom-scripts.html</strong></p>
<h2>
<a id="user-content-метод-сборки-js" class="anchor" href="#%D0%BC%D0%B5%D1%82%D0%BE%D0%B4-%D1%81%D0%B1%D0%BE%D1%80%D0%BA%D0%B8-js" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Метод сборки js</h2>
<p>Проект собирается с помощью <strong>ES Build</strong>. ES6 код компилируется в обычный js поддерживаемый браузером.</p>
<p>Данный вид сборки позволяет использовать <code>import</code>, <code>export</code> в коде, что облегчает жизнь, когда проект рассчитан только на одну точку входа. Например <strong>app.js</strong>, в который импортируются все необходимые модули и js файлы проекта, требуется роутер и так далее.</p>
<p>Простыми словами — данный вид сборки, в большей степени, предназначен для SPA приложений, но его можно использовать в любом проекте при желании.</p>
<h2>
<a id="user-content-шаблонизатор" class="anchor" href="#%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD%D0%B8%D0%B7%D0%B0%D1%82%D0%BE%D1%80" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Шаблонизатор</h2>
<p>Для шаблонизации используется движок <strong>nunjucks</strong>. Примеры можно посмотреть на официальном сайте — <a href="https://mozilla.github.io/nunjucks/" rel="nofollow">https://mozilla.github.io/nunjucks/</a>. В файле <strong>index.html</strong> продемонстрирован пример добавления других файлов в шаблон через команду <code>include</code>.</p>
<p>В шаблоны можно передавать данные, как с сервера при компиляции, так и прописывать в HTML.</p>
<h3>
<a id="user-content-примеры" class="anchor" href="#%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Примеры</h3>
<p>Данные в шаблоне прописываются через команду <code>set</code>:</p>
<p>Через сервер можно отправить данные в шаблон через свойство <code>data</code>:</p>
<p><code>.pipe(nunjucksRender({ path: ['src/templates'], data: { items: [{ title: "foo", id: 1 }, { title: "bar", id: 2}] } }))</code></p>
<p>Доступ к данным осуществляется через двойные скобки</p>
<p>Остальные методы работы с данными, такие как циклы и условия, можно посмотреть в документации <a href="https://mozilla.github.io/nunjucks/" rel="nofollow">https://mozilla.github.io/nunjucks/</a></p>
<h2>
<a id="user-content-стили-ипрепроцессор" class="anchor" href="#%D1%81%D1%82%D0%B8%D0%BB%D0%B8-%D0%B8%D0%BF%D1%80%D0%B5%D0%BF%D1%80%D0%BE%D1%86%D0%B5%D1%81%D1%81%D0%BE%D1%80" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Стили и препроцессор</h2>
<p>Для проекта установлен <strong>Stylus</strong> по-умолчанию. Его можно заменить, установив любой другой препроцессор. После установки, необходимо обновить файл <strong>gulpfile.babel.js</strong>, обновить расширения в переменной <code>path</code>, и изменить расширения файлов стилей.</p>
<p>Подробнее о <strong>Stylus</strong> — <a href="http://stylus-lang.com/" rel="nofollow">http://stylus-lang.com/</a></p>
<p>Например чтобы установить <strong>SASS</strong> компилятор, необходимо добавить пакет
<code>npm i gulp-dart-sass --save-dev</code> и изменить импорт пакета
<code>import cssProcessor     from 'gulp-dart-sass';</code>
Это необходимый минимум, который позволит компилировать в SCSS файлы с расшрирением <em>.styl</em></p>
<h2>
<a id="user-content-https-режим" class="anchor" href="#https-%D1%80%D0%B5%D0%B6%D0%B8%D0%BC" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Https режим</h2>
<p>Для запуска сервера в режиме **https** нужно добавить параметр `--https` в команду запуска проекта, которая прописана в <code>package.json</code>.
Например <code>"start": "gulp --open --https"</code> запустит локальный сервер в соответствующем режим, если убрать этот параметр, режим **https** будет выключен.</p>
<h2>
<a id="user-content-добавляем-сертификат-для-https" class="anchor" href="#%D0%B4%D0%BE%D0%B1%D0%B0%D0%B2%D0%BB%D1%8F%D0%B5%D0%BC-%D1%81%D0%B5%D1%80%D1%82%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82-%D0%B4%D0%BB%D1%8F-https" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Добавляем сертификат для https</h2>
<p>Чтобы локальный сервер работал через <strong>https</strong>, необходимо добавить существующий сертификат или создать новый. Далее рассмотрены 2 варианта, когда уже есть готовый сертификат и когда нет.</p>
<h3>
<a id="user-content-1-создаем-сертификат" class="anchor" href="#1-%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%B5%D0%BC-%D1%81%D0%B5%D1%80%D1%82%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%82" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>1) Создаем сертификат</h3>
<p>1. Скачиваем файл для Windows <a href="https://github.com/FiloSottile/mkcert/releases">https://github.com/FiloSottile/mkcert/releases</a><br>
Например мы скачали <code>mkcert-v1.4.1-windows-amd64.exe</code><br>
Сохраняем в любую пустую папку</p>
<p>2. Запускаем <strong>PowerShell</strong> в режиме администратора</p>
<p>3. В <strong>PowerShell</strong> переходим в папку с файлом <code>mkcert-v1.4.1-windows-amd64.exe</code> например командой <code>cd D:\project\path</code></p>
<p>4. Устанавливаем локальный центр сертификации командой: <code>.\mkcert-v1.4.1-windows-amd64.exe -install</code></p>
<p>5. Создаем сертификаты для <code>localhost</code>: <code>.\mkcert-v1.4.1-windows-amd64.exe localhost</code></p>
<p>6. Если все прошло успешно, в папке появляются 2 файла:<br>
<code>localhost.pem</code> - сертификат<br>
<code>localhost-key.pem</code> - ключ</p>
<p>7. Копируем эти файлы в любое удобное место или оставляем как есть.</p>
<p>8. В данном проекте путь к файлу должен быть прописан через переменную окружения. Переменные окружения прописываются в файле <code>.env</code>, который не заливается в репозиторий.<br>
Пример файла есть в папке проекта <code>.env.example</code>. Нужно создать копию и назвать его <code>.env</code>.<br>
Заменить пути на реальные, которые ведут к вашим файлам сертификатов.</p>
<p><code>HTTPSKEY=PATH\TO\FILE HTTPSCRT=PATH\TO\FILE</code><br>
<strong>Важно:</strong> это могут быть как pem файлы, так и файлы с расширением <code>.key</code>, <code>.crt</code>.<br>
После добавления файла сертификата, проект будет запускаться по адресу <a href="https://localhost:8080" rel="nofollow">https://localhost:8080</a></p>
<h3>
<a id="user-content-2-используем-существующий" class="anchor" href="#2-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D1%83%D0%B5%D0%BC-%D1%81%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D1%83%D1%8E%D1%89%D0%B8%D0%B9" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>2) Используем существующий</h3>
<p>Для добавления существующего сертификата, необходимо только создать копию файла <code>.env.example</code> и переименовать ее в <code>.env</code> и указать пути к сертификатам.</p>
<h2>
<a id="user-content-описание-важных-файлов" class="anchor" href="#%D0%BE%D0%BF%D0%B8%D1%81%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B0%D0%B6%D0%BD%D1%8B%D1%85-%D1%84%D0%B0%D0%B9%D0%BB%D0%BE%D0%B2" aria-hidden="true"><span aria-hidden="true" class="octicon octicon-link"></span></a>Описание важных файлов</h2>
<p><code>.browserslistrc</code> - содержит список всех браузеров, которым необходимо проставлять префиксы в стилях.</p>
<p><code>.env.example</code> - пример файла с переменными окружения, необходимыми для проекта. При желании использовать <strong>HTTPS</strong>, нужно сделать его копию, переименовать в <code>.env</code> и обновить записанные в нем переменные окружения.</p>
</article>